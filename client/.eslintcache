[{"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\index.js":"1","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\reportWebVitals.js":"2","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\App.js":"3","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Login\\Login.js":"4","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\AddRecord\\AddRecord.js":"5","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Menu\\Menu.js":"6","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummary.js":"7","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummary.js":"8","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\NewMember.js":"9","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\Confirmation\\Confirmation.js":"10","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\UpdateRecord\\UpdateRecord.js":"11","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberSelection.js":"12","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\EditMember\\EditMember.js":"13","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertSelection.js":"14","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Footer\\Footer.js":"15","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Header\\Header.js":"16","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummaryList\\MemberSummaryList.js":"17","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertList\\CertList.js":"18","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberList\\MemberList.js":"19","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummaryList\\CertSummaryList.js":"20","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\FullTable\\FullTable.js":"21","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\ChangePassword\\ChangePassword.js":"22","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\Register.js":"23","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Landing\\Landing.js":"24","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Navbar\\Navbar.js":"25","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\checkFormFields.js":"26","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\userApis.js":"27","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\index.js":"28","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\index.js":"29","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\appStore.js":"30","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\types.js":"31","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\setAuthToken.js":"32"},{"size":503,"mtime":1612254699410,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":3183,"mtime":1613184453436,"results":"36","hashOfConfig":"34"},{"size":2959,"mtime":1613192770510,"results":"37","hashOfConfig":"34"},{"size":3241,"mtime":1612953048252,"results":"38","hashOfConfig":"34"},{"size":475,"mtime":1613045125505,"results":"39","hashOfConfig":"34"},{"size":1370,"mtime":1612951640558,"results":"40","hashOfConfig":"34"},{"size":1155,"mtime":1612953661301,"results":"41","hashOfConfig":"34"},{"size":4459,"mtime":1613029468340,"results":"42","hashOfConfig":"34"},{"size":382,"mtime":1612863140118,"results":"43","hashOfConfig":"34"},{"size":2603,"mtime":1613007676914,"results":"44","hashOfConfig":"34"},{"size":310,"mtime":1612952322298,"results":"45","hashOfConfig":"34"},{"size":11550,"mtime":1612954766502,"results":"46","hashOfConfig":"34"},{"size":274,"mtime":1612953298646,"results":"47","hashOfConfig":"34"},{"size":382,"mtime":1611466806904,"results":"48","hashOfConfig":"34"},{"size":441,"mtime":1612958237241,"results":"49","hashOfConfig":"34"},{"size":1690,"mtime":1613007476905,"results":"50","hashOfConfig":"34"},{"size":758,"mtime":1612873943921,"results":"51","hashOfConfig":"34"},{"size":918,"mtime":1613030840788,"results":"52","hashOfConfig":"34"},{"size":1309,"mtime":1612953640528,"results":"53","hashOfConfig":"34"},{"size":1908,"mtime":1613169951142,"results":"54","hashOfConfig":"34"},{"size":563,"mtime":1613036482110,"results":"55","hashOfConfig":"34"},{"size":5227,"mtime":1613175549365,"results":"56","hashOfConfig":"34"},{"size":641,"mtime":1613184449615,"results":"57","hashOfConfig":"34"},{"size":2011,"mtime":1613191523826,"results":"58","hashOfConfig":"34"},{"size":1457,"mtime":1613173913229,"results":"59","hashOfConfig":"34"},{"size":648,"mtime":1613189235806,"results":"60","hashOfConfig":"34"},{"size":989,"mtime":1613128112301,"results":"61","hashOfConfig":"34"},{"size":551,"mtime":1613127870855,"results":"62","hashOfConfig":"34"},{"size":1080,"mtime":1613128112294,"results":"63","hashOfConfig":"34"},{"size":136,"mtime":1613127870858,"results":"64","hashOfConfig":"34"},{"size":428,"mtime":1613128119795,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"jvy9vk",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\index.js",[],["143","144"],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\App.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Login\\Login.js",["145","146"],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\AddRecord\\AddRecord.js",["147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams} from \"react-router-dom\";\r\n\r\nfunction NewRecord(props) {\r\n  const { id } = useParams();\r\n  // console.log(\"propsID: \" + props.id);\r\n  console.log(\"{ ID }: \" + id);\r\n  const [cert_id, setCert_id] = useState([]);\r\n  const [expiry, setExpiry] = useState([]);\r\n  console.log(cert_id)\r\n  console.log(expiry);\r\n\r\n  // LOOK UP CERTS\r\n  const [certs, setCerts] = useState([]);\r\n  function fetchCerts() {\r\n    return axios.get(\"/api/certs\").then((response) => response.data);\r\n  }\r\n  useEffect(() => {\r\n    fetchCerts().then((certs) => setCerts(certs));\r\n  }, []);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  console.log(firstname);\r\n  console.log(lastname);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displayname/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n  // FUNCTION TO INVOKE API ROUTE AND PUT MYSQL\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    console.log([]);\r\n    axios\r\n      .post(\"/api/addrecord\", {\r\n        // member_id: member_id,\r\n        member_id: id,\r\n        cert_id: cert_id,\r\n        expiry: expiry,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render New record form\r\n  return (\r\n    <div className=\"new-member-form\">\r\n\r\n      <form className=\"gen-text\" onSubmit={submitHandler}>\r\n\r\n      <h4 className=\"title-text\">Add Certification to:</h4>\r\n        {members.map((member, i) => {\r\n        console.log(member);\r\n        return (\r\n          //\r\n          <h4 key={member.id} className=\"title-text\">\r\n            {member.firstname} {member.lastname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n        {/* <label className=\"label\">Certificate</label> */}\r\n        <div className=\"control\">\r\n          <div className=\"select\">\r\n            <select\r\n              className=\"input input-box gen-text\"\r\n              name=\"certname\"\r\n              value={cert_id}\r\n              onChange={(e) => setCert_id(e.target.value)}\r\n            >\r\n              <option value=\"\" selected disabled>Select Certificate</option>\r\n              {certs.map((cert) => {\r\n                return <option key={cert.id} value={cert.id}> {cert.certname} </option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <p className=\"gen-text\">Select new expiry:</p>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input input-box gen-text\"\r\n              type=\"date\"\r\n              name=\"expiry\"\r\n              value={expiry}\r\n              onChange={(e) => setExpiry(e.target.value)}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control\">\r\n          <button type=\"submit\" className=\"button is-primary button-text\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewRecord;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Menu\\Menu.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummary.js",["150","151","152"],"import React, { useState, useEffect } from \"react\";\r\nimport MemberSummaryList from \"./MemberSummaryList/MemberSummaryList\";\r\n// import AddRecord from \"./MemberSummaryList/AddRecord/AddRecord\";\r\nimport { BrowserRouter as Router, Switch, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction MemberSummary() {\r\n  const { id } = useParams();\r\n  console.log(\"number \" + id);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  console.log(firstname);\r\n  console.log(lastname);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displayname/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"title-text\">Member Profile:</h4>\r\n      {members.map((member, i) => {\r\n        console.log(member);\r\n        return (\r\n          //\r\n          <h4 key={member.id} className=\"title-text\">\r\n            {member.firstname} {member.lastname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n      <Router>\r\n        <Switch>\r\n          <MemberSummaryList id={id} />\r\n        </Switch>\r\n      </Router>\r\n      <p className=\"gen-text\">Member number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default MemberSummary;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummary.js",["153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport CertSummaryList from \"./CertSummaryList/CertSummaryList\";\r\nimport { BrowserRouter as Router, Switch, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction CertSummary() {\r\n  const { id } = useParams();\r\n\r\n  const [certs, setMembers] = useState([]);\r\n  const [certname, setCertname] = useState([]);\r\n  console.log(certname);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displaycert/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n            <h4 className=\"title-text\">Certification Check:</h4>\r\n      {certs.map((cert, i) => {\r\n        console.log(cert);\r\n        return (\r\n          //\r\n          <h4 key={cert.id} className=\"title-text\">\r\n            {cert.certname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n      <Router>\r\n        <Switch>\r\n      <CertSummaryList id={id} />\r\n      </Switch>\r\n      </Router>\r\n      <p className=\"gen-text\">Cert number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default CertSummary;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\NewMember.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\Confirmation\\Confirmation.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\UpdateRecord\\UpdateRecord.js",["155"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction UpdateRecord(props) {\r\n  const { id } = useParams();\r\n  console.log(id);\r\n\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios\r\n      .get(\"/api/updaterecord/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((records) => setRecords(records));\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  const [expiry, setExpiry] = useState([]);\r\n  console.log(expiry);\r\n\r\n  function submitHandler(e) {\r\n    // e.preventDefault();\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updaterecord/\" + id, {\r\n        expiry: expiry,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render record\r\n  console.log({ id });\r\n  return (\r\n    <div>\r\n            <h4 className=\"title-text\">Extend Certification:</h4>\r\n      {records.map((record, i) => {\r\n        console.log(record);\r\n        return (\r\n          <p key={record.id}>\r\n            <h4 className=\"title-text\">\r\n              {record.firstname} {record.lastname}\r\n            </h4>\r\n            <h4 className=\"gen-text\"> {record.certname} </h4>\r\n            <h4 className=\"gen-text\"> Current Expiry: {parseDate(record.expiry)}</h4>\r\n          </p>\r\n        );\r\n      })}\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"field\">\r\n          <label className=\"label\">\r\n            <p className=\"gen-text\"><strong>Select new expiry:</strong></p>\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input input-box gen-text\"\r\n              type=\"date\"\r\n              name=\"expiry\"\r\n              value={expiry}\r\n              onChange={(e) => setExpiry(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"control\">\r\n            <button type=\"submit\" className=\"button is-primary button-text\">\r\n              Extend\r\n            </button>\r\n            <p className=\"gen-text\">Record number #{id}</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {records.map((record, i) => {\r\n        console.log(record);\r\n        return <Link to=\"/members/\">Back to Member Lookup</Link>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRecord;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberSelection.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\EditMember\\EditMember.js",["156","157"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction EditMember(props) {\r\n  const { id } = useParams();\r\n  console.log(id);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  const [email, setEmail] = useState([]);\r\n  const [dob, setDob] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [iscommittee, setIscommittee] = useState([]);\r\n  const [iscoach, setIscoach] = useState([]);\r\n  const [isactive, setIsactive] = useState([]);\r\n  console.log(firstname);\r\n  console.log(lastname);\r\n  console.log(email);\r\n  console.log(dob);\r\n  console.log(gender);\r\n  console.log(iscommittee);\r\n  console.log(iscoach);\r\n  console.log(isactive);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/updatemember/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n  function parseDate(dob) {\r\n    const date = new Date(dob);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  // function parseBoolean(props) {\r\n  //   const isactive = new active(props);\r\n  //   return (\r\n  //     \"Yes\"\r\n  //   );\r\n  // }\r\n\r\n  const [expiry, setExpiry] = useState([]);\r\n  console.log(expiry);\r\n\r\n  function submitFirstnameHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/firstname/\" + id, {\r\n        firstname: firstname,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitLastnameHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/lastname/\" + id, {\r\n        lastname: lastname,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitEmailHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/email/\" + id, {\r\n        email: email,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitDobHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/dob/\" + id, {\r\n        dob: dob,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitGenderHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/gender/\" + id, {\r\n        gender: gender,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIscommitteeHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/iscommittee/\" + id, {\r\n        iscommittee: iscommittee,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIscoachHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/iscoach/\" + id, {\r\n        iscoach: iscoach,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIsactiveHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/isactive/\" + id, {\r\n        isactive: isactive,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render member\r\n  console.log({ id });\r\n  return (\r\n    <div>\r\n            <h4 className=\"title-text\">Update member details:</h4>\r\n      {members.map((member, i) => {\r\n        console.log(member);\r\n        return (\r\n          <p key={member.id}>\r\n            <h4 className=\"title-text\">\r\n              {member.firstname} {member.lastname}\r\n            </h4>\r\n            <p className=\"gen-text\">\r\n            {member.email} </p>\r\n            <p className=\"gen-text\"> {parseDate(member.dob)} {member.gender} \r\n            </p>\r\n            <p className=\"gen-text\">\r\n              Committee member: {member.iscommittee} </p>\r\n            <p className=\"gen-text\">Coach: {member.iscoach}\r\n            </p>\r\n            <p className=\"gen-text\">Member active: {member.isactive}</p>\r\n\r\n            <form onSubmit={submitFirstnameHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n              className=\"input input-box gen-text\"\r\n                  type=\"text\"\r\n                  name=\"firstname\"\r\n                  value={firstname}\r\n                  placeholder={member.firstname}\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={firstname.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitLastnameHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n              className=\"input input-box gen-text\"\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  value={lastname}\r\n                  placeholder={member.lastname}\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={lastname.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitEmailHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n              className=\"input input-box gen-text\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  placeholder={member.email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={email.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitDobHandler}>\r\n              <div className=\"field\">\r\n                {/* <label className=\"label\">Current DOB: {member.dob}</label> */}\r\n                <div className=\"control\">\r\n                  <input\r\n              className=\"input input-box gen-text\"\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    value={dob}\r\n                    data-start-date={member.dob}\r\n                    onChange={(e) => setDob(e.target.value)}\r\n                  ></input>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"button is-primary button-text update-text\"\r\n                    disabled={dob.length < 1}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  {console.log(dob)}\r\n                  {console.log(member.dob)}\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitGenderHandler}>\r\n              <div className=\"control\">\r\n                <div className=\"select\">\r\n                  <select\r\n              className=\"input input-box gen-text\"\r\n                    // type=\"date\"\r\n                    name=\"gender\"\r\n                    value={gender}\r\n                    // selection={member.gender}\r\n                    onChange={(e) => setGender(e.target.value)}\r\n                  >\r\n                    <option selected hidden>\r\n                      {member.gender}\r\n                    </option>\r\n                    <option value=\"\" selected disabled>{member.gender}</option>\r\n                    <option>Unknown</option>\r\n                    <option>Female</option>\r\n                    <option>Male</option>\r\n                    <option>Other</option>\r\n                  </select>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"button is-primary button-text update-text\"\r\n                    disabled={gender.length < 1}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitIscommitteeHandler}>\r\n            <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"iscommittee\"\r\n                  value={iscommittee}\r\n                  defaultChecked={member.iscommittee}\r\n                  onChange={(e) => setIscommittee(e.target.checked)}\r\n                ></input>\r\n                Committee\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={iscommittee.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n            {/* <br></br> */}\r\n            <form onSubmit={submitIscoachHandler}>\r\n            <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"iscoach\"\r\n                  value={iscoach}\r\n                  defaultChecked={member.iscoach}\r\n                  onChange={(e) => setIscoach(e.target.checked)}\r\n                ></input>\r\n                Coach\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={iscoach.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n            {/* <br></br> */}\r\n            <form onSubmit={submitIsactiveHandler}>\r\n              <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"isactive\"\r\n                  value={isactive}\r\n                  defaultChecked={member.isactive}\r\n                  onChange={(e) => setIsactive(e.target.checked)}\r\n                ></input>\r\n                Active\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={isactive.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n            <Link to=\"/members/\">Back to Member Lookup</Link>\r\n           </p>\r\n        );\r\n        \r\n      })}\r\n            <p className=\"gen-text\">Member number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditMember;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertSelection.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummaryList\\MemberSummaryList.js",["158"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MemberSummaryList.css\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction MemberSummaryList(props) {\r\n  console.log(props.id);\r\n\r\n  const [profiles, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios\r\n      .get(\"/api/members/\" + props.id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((profiles) => setRecords(profiles));\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n//     function refreshPage() {\r\n//     window.location.reload();\r\n// }\r\n\r\n  // Render member profile list\r\n  return (\r\n    <div className=\"menu-list\">\r\n      {profiles.map((record, i) => {\r\n        console.log(record);\r\n        return (\r\n          <p key={record.id}>\r\n            <Router>\r\n            <Link to={\"/#/updaterecord/\" + record.id} >\r\n              <span className=\"menu-text\">{record.certname} {record.member_id}</span>\r\n              <br></br>\r\n              <span className=\"gen-text\">Expiry:{parseDate(record.expiry)}</span>\r\n            </Link>\r\n            </Router>\r\n          </p>\r\n        );\r\n      })}\r\n      \r\n      <div className=\"control button-div\">\r\n        <Link className=\"button-text\" to={`/#/addrecord/${props.id}`}>Add Record</Link>\r\n      </div>\r\n      <div className=\"control button-div\">\r\n      <Link className=\"button-text\" to={`/#/editmember/${props.id}`}>Edit Member</Link>\r\n    </div></div>\r\n  );\r\n}\r\n\r\nexport default MemberSummaryList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertList\\CertList.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberList\\MemberList.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MemberList.css\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nfunction MemberList() {\r\n  const [members, setMembers] = useState([]);\r\n\r\n  function fetchMembers() {\r\n    return axios.get(\"/api/members\").then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n//   function refreshPage() {\r\n//     window.location.reload();\r\n// }\r\n\r\n  // Render member list\r\n  return (\r\n    <div className=\"menu-list\">\r\n      {members.map((member) => {\r\n        return (\r\n          <p className=\"menu-text\" key={member.id}>\r\n            <Link to={\"/members/\" + member.id} >\r\n              {member.firstname} {member.lastname}\r\n            </Link>\r\n            </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummaryList\\CertSummaryList.js",["160"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./CertSummaryList.css\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction CertSummaryList(props) {\r\n\r\n  console.log(props.id);\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function fetchRecords(){\r\n    return axios.get('/api/certs/' + props.id )\r\n      .then((response) => response.data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords()\r\n      .then((response) => setRecords(response) );\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry)\r\n    return (date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear())\r\n  };\r\n\r\n  // Render cert summary list\r\n  return (\r\n    <div className=\"menu-list\">\r\n      {records.map((record, i) => {\r\n        console.log(record);\r\n        return (\r\n          <p key={record.id} >\r\n            <Link to={`/#/updaterecord/${record.id}`}> \r\n            <span className=\"menu-text\">{record.firstname} {record.lastname} </span><br></br> \r\n            {/* <span className=\"gen-text\">{record.certname}</span> <br></br>  */}\r\n            <span className=\"gen-text\">Expiry: {parseDate(record.expiry)}</span></Link>\r\n                      </p>\r\n          \r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default CertSummaryList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\FullTable\\FullTable.js",["161"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RecordList() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios.get(\"/api/fulltable\").then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((records) => setRecords(records));\r\n  }, []);\r\n\r\n  // function parseBoolean(isactive) {\r\n\r\n  //   if (isactive === 1) {\r\n  //     return (\r\n  //       \"True\"\r\n  //     )\r\n      \r\n  //   }\r\n\r\n  //   return Object.assign({}, isactive, {\r\n  //     isChecked: !!Number(isactive.isChecked), // OR\r\n  //     isChecked: Boolean(Number(isactive.isChecked))\r\n  //   });\r\n  // }\r\n\r\n  // Render record list\r\n  // const isactive = this.state.isactive;\r\n  return (\r\n    <div>\r\n        <h4>For best results, view table on a desktop or tablet</h4>\r\n    <table className=\"menu-list center\">\r\n            <tr className=\"menu-text\" >\r\n              <th>Firstname</th>\r\n              <th>Lastname</th>\r\n              <th>Gender</th>\r\n              <th>Date of Birth</th>\r\n              <th>Email Address</th>\r\n              <th>Certificate</th>\r\n              <th>Expiry</th>\r\n              <th>Is Active?</th> \r\n              </tr>\r\n      {records.map((record) => {\r\n        return (\r\n          <tr className=\"menu-text\" key={record.id}>\r\n              <td>{record.firstname} </td>\r\n              <td>{record.lastname}</td>\r\n              <td>{record.gender} </td>\r\n              <td>{record.dob} </td>\r\n              <td>{record.email} </td>\r\n              <td>{record.certname} </td>\r\n              <td>{record.expiry} </td>\r\n              <td>{record.isactive}</td>               \r\n              {/* <td>{parseBoolean(record.isactive)}</td>  */}\r\n\r\n\r\n\r\n\r\n          </tr>\r\n        );\r\n      })}\r\n        </table>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default RecordList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\ChangePassword\\ChangePassword.js",["162","163","164","165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction ChangePassword(props) {\r\n\r\n    return (\r\n        <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        className=\"input\"\r\n        required\r\n        // value= {formState.pass}\r\n        // onChange= {(e)=> {\r\n        //   setFormState({\r\n        //     ...formState,\r\n        //     pass: e.target.value\r\n        //   })\r\n        // }} \r\n      ></input>\r\n\r\n\r\n    )}\r\n    export default ChangePassword;","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\Register.js",["167","168"],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { registerUser, getUsers } from '../../utils/userApis';\r\nimport { checkFormFields } from './checkFormFields';\r\n\r\n\r\nfunction Register() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [registerState, setRegisterState] = useState({\r\n        // first_name: '',\r\n        // last_name: '',\r\n        email: '',\r\n        password: '',\r\n        errors: {},\r\n        formIsValid: true,\r\n    });\r\n\r\n    const handleValidation = () => {\r\n        const [errors, formIsValid] = checkFormFields(registerState);\r\n        setRegisterState({ ...registerState, errors, formIsValid });\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        setRegisterState({ ...registerState, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        let errors = {};\r\n        handleValidation();\r\n        event.preventDefault();\r\n        const userData = {\r\n            // first_name: registerState.first_name,\r\n            // last_name: registerState.last_name,\r\n            email: registerState.email,\r\n            password: registerState.password,\r\n        };\r\n        if (registerState.formIsValid) {\r\n            try {\r\n                const res = await registerUser(userData)\r\n                console.log(res.data);\r\n                history.push('/login');\r\n                console.log('Form submitted');\r\n            } catch (error) {\r\n                errors['email'] = 'Email already exists';\r\n                setRegisterState({ ...registerState, errors })\r\n            }\r\n        } else {\r\n            console.log('Form has errors.');\r\n        }\r\n    };\r\n\r\n//   const [formState, setFormState] = React.useState({\r\n//     email: \"\",\r\n//     password: \"\"\r\n//   })\r\n\r\n  // Render Signup form\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"mx-auto mt-5 col-md-6\">\r\n                <form noValidate \r\n                onSubmit={onSubmit}>\r\n                    <h1 className=\"mb-3 h3 font-weight normal\">Please Sign in</h1>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            refs=\"email\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={registerState.email}\r\n                            onChange={onChange}\r\n                        />\r\n                        <span style={{ color: 'red' }}>\r\n                            {registerState.errors['email']}\r\n                            </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            refs=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={registerState.password}\r\n                            onChange={onChange}\r\n                        />\r\n                        <span style={{ color: 'red' }}>\r\n                            {registerState.errors['password']}\r\n                            </span>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n                        \r\n    /* <div>\r\n\r\n      <form action=\"\" className=\"box\" onSubmit= {(e)=> {\r\n        e.preventDefault()\r\n        // validation\r\n        console.log(formState);\r\n        axios({\r\n          method: 'post',\r\n          url: \"http://localhost:3001/api/signup\",\r\n          data: {\r\n            username: formState.email,\r\n          },headers: {\r\n            \"Access-Control-Allow-Origin\": true \r\n          }\r\n        });\r\n\r\n        //   function fetchAdmins() {\r\n        //     return axios.get(\"/api/validate\").then((response) => response.data);\r\n        //   }\r\n        \r\n        //   useEffect(() => {\r\n        //     fetchAdmins().then((admins) => setAdmins(admins));\r\n        //   }, []);\r\n      }}>\r\n        <div className=\"field\">\r\n          <div className=\"control has-icons-left\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email address\"\r\n              className=\"input\"\r\n              required\r\n              value= {formState.email}\r\n              // onChange= {(e)=> {\r\n              //   setFormState({\r\n              //     ...formState,\r\n              //     email: e.target.value\r\n              //   })\r\n              // }} \r\n            ></input>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-secondary\">Validate</button>\r\n      </form>\r\n\r\n      <br></br>\r\n    </div> */\r\n  );\r\n}\r\nconsole.log(\"hello\");\r\nexport default Register;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Landing\\Landing.js",["169"],"import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport Menu from \"../Menu/Menu\";\nimport Login from \"../Login/Login\";\nimport Register from \"../Register/Register\";\n\nfunction Landing() {\n    return (\n        <div className=\"container-fluid p-0 m-0\">\n            <div className=\"d-flex justify-content-center backgroundImg\">\n                Strong, bold and confident\n\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/\" component={Menu} />\n            </div>\n\n        </div>\n    );\n}\n\nexport default Landing;\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\checkFormFields.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\userApis.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\index.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\index.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\appStore.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\types.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\setAuthToken.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"178","line":4,"column":21,"nodeType":"176","messageId":"177","endLine":4,"endColumn":29},{"ruleId":"174","severity":1,"message":"179","line":24,"column":21,"nodeType":"176","messageId":"177","endLine":24,"endColumn":33},{"ruleId":"174","severity":1,"message":"180","line":25,"column":20,"nodeType":"176","messageId":"177","endLine":25,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":37,"column":6,"nodeType":"183","endLine":37,"endColumn":8,"suggestions":"184"},{"ruleId":"174","severity":1,"message":"179","line":12,"column":21,"nodeType":"176","messageId":"177","endLine":12,"endColumn":33},{"ruleId":"174","severity":1,"message":"180","line":13,"column":20,"nodeType":"176","messageId":"177","endLine":13,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":25,"column":6,"nodeType":"183","endLine":25,"endColumn":8,"suggestions":"185"},{"ruleId":"174","severity":1,"message":"186","line":11,"column":20,"nodeType":"176","messageId":"177","endLine":11,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":22,"column":6,"nodeType":"183","endLine":22,"endColumn":8,"suggestions":"187"},{"ruleId":"181","severity":1,"message":"188","line":20,"column":6,"nodeType":"183","endLine":20,"endColumn":8,"suggestions":"189"},{"ruleId":"181","severity":1,"message":"182","line":35,"column":6,"nodeType":"183","endLine":35,"endColumn":8,"suggestions":"190"},{"ruleId":"174","severity":1,"message":"191","line":51,"column":18,"nodeType":"176","messageId":"177","endLine":51,"endColumn":27},{"ruleId":"181","severity":1,"message":"188","line":20,"column":6,"nodeType":"183","endLine":20,"endColumn":8,"suggestions":"192"},{"ruleId":"174","severity":1,"message":"193","line":4,"column":27,"nodeType":"176","messageId":"177","endLine":4,"endColumn":33},{"ruleId":"181","severity":1,"message":"188","line":22,"column":6,"nodeType":"183","endLine":22,"endColumn":8,"suggestions":"194"},{"ruleId":"174","severity":1,"message":"195","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"196","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"197","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"175","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"198","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":19},{"ruleId":"174","severity":1,"message":"195","line":3,"column":21,"nodeType":"176","messageId":"177","endLine":3,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"178","line":4,"column":24,"nodeType":"176","messageId":"177","endLine":4,"endColumn":32},{"ruleId":"174","severity":1,"message":"195","line":2,"column":17,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'getUsers' is defined but never used.","'setFirstname' is assigned a value but never used.","'setLastname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMembers'. Either include it or remove the dependency array.","ArrayExpression",["201"],["202"],"'setCertname' is assigned a value but never used.",["203"],"React Hook useEffect has a missing dependency: 'fetchRecords'. Either include it or remove the dependency array.",["204"],["205"],"'setExpiry' is assigned a value but never used.",["206"],"'Router' is defined but never used.",["207"],"'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"208","fix":"211"},{"desc":"212","fix":"213"},{"desc":"208","fix":"214"},{"desc":"212","fix":"215"},{"desc":"212","fix":"216"},"Update the dependencies array to be: [fetchMembers]",{"range":"217","text":"218"},{"range":"219","text":"218"},{"range":"220","text":"218"},"Update the dependencies array to be: [fetchRecords]",{"range":"221","text":"222"},{"range":"223","text":"218"},{"range":"224","text":"222"},{"range":"225","text":"222"},[1082,1084],"[fetchMembers]",[820,822],[633,635],[494,496],"[fetchRecords]",[1069,1071],[527,529],[499,501]]