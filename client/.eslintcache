[{"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\index.js":"1","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\reportWebVitals.js":"2","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\App.js":"3","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Login\\Login.js":"4","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\AddRecord\\AddRecord.js":"5","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Menu\\Menu.js":"6","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummary.js":"7","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummary.js":"8","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\NewMember.js":"9","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\Confirmation\\Confirmation.js":"10","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\UpdateRecord\\UpdateRecord.js":"11","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberSelection.js":"12","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\EditMember\\EditMember.js":"13","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertSelection.js":"14","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Footer\\Footer.js":"15","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Header\\Header.js":"16","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummaryList\\MemberSummaryList.js":"17","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertList\\CertList.js":"18","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberList\\MemberList.js":"19","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummaryList\\CertSummaryList.js":"20","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\FullTable\\FullTable.js":"21","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\Register.js":"22","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Landing\\Landing.js":"23","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Navbar\\Navbar.js":"24","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\checkFormFields.js":"25","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\userApis.js":"26","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\index.js":"27","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\index.js":"28","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\appStore.js":"29","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\types.js":"30","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\setAuthToken.js":"31"},{"size":500,"mtime":1613285494948,"results":"32","hashOfConfig":"33"},{"size":364,"mtime":1613285505146,"results":"34","hashOfConfig":"33"},{"size":2361,"mtime":1613285484169,"results":"35","hashOfConfig":"33"},{"size":2865,"mtime":1613288899884,"results":"36","hashOfConfig":"33"},{"size":3118,"mtime":1613287364686,"results":"37","hashOfConfig":"33"},{"size":473,"mtime":1613284704236,"results":"38","hashOfConfig":"33"},{"size":1288,"mtime":1613289354657,"results":"39","hashOfConfig":"33"},{"size":1050,"mtime":1613286968745,"results":"40","hashOfConfig":"33"},{"size":4427,"mtime":1613289173753,"results":"41","hashOfConfig":"33"},{"size":629,"mtime":1613279076225,"results":"42","hashOfConfig":"33"},{"size":2572,"mtime":1613287081864,"results":"43","hashOfConfig":"33"},{"size":273,"mtime":1613285358539,"results":"44","hashOfConfig":"33"},{"size":11471,"mtime":1613289005464,"results":"45","hashOfConfig":"33"},{"size":266,"mtime":1613285319408,"results":"46","hashOfConfig":"33"},{"size":382,"mtime":1613285265396,"results":"47","hashOfConfig":"33"},{"size":441,"mtime":1612958237241,"results":"48","hashOfConfig":"33"},{"size":2306,"mtime":1613289346018,"results":"49","hashOfConfig":"33"},{"size":731,"mtime":1613285315661,"results":"50","hashOfConfig":"33"},{"size":789,"mtime":1613289022847,"results":"51","hashOfConfig":"33"},{"size":1567,"mtime":1613286750997,"results":"52","hashOfConfig":"33"},{"size":1504,"mtime":1613285333975,"results":"53","hashOfConfig":"33"},{"size":2973,"mtime":1613289302922,"results":"54","hashOfConfig":"33"},{"size":589,"mtime":1613288917688,"results":"55","hashOfConfig":"33"},{"size":1548,"mtime":1613286610881,"results":"56","hashOfConfig":"33"},{"size":693,"mtime":1613285388457,"results":"57","hashOfConfig":"33"},{"size":475,"mtime":1613287281199,"results":"58","hashOfConfig":"33"},{"size":919,"mtime":1613285402844,"results":"59","hashOfConfig":"33"},{"size":539,"mtime":1613285276710,"results":"60","hashOfConfig":"33"},{"size":959,"mtime":1613285399049,"results":"61","hashOfConfig":"33"},{"size":136,"mtime":1613285279853,"results":"62","hashOfConfig":"33"},{"size":398,"mtime":1613285406167,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"jvy9vk",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\index.js",[],["137","138"],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\App.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Login\\Login.js",["139"],"import React from \"react\";\r\nimport { useAppContext } from \"../../store\";\r\nimport { loginUser, getUsers } from \"../../utils/userApis\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setUserLoggedIn } from \"../../actions\";\r\n\r\n// import { checkFormFields } from '../Register/checkFormFields';\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n\r\n  const [formState, setFormState] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {},\r\n    formIsValid: true,\r\n  });\r\n\r\n  //   const handleValidation = () => {\r\n  //     const [errors, formIsValid] = checkFormFields(formState);\r\n  //     setFormState({ ...formState, errors, formIsValid });\r\n  // };\r\n\r\n  const [, appDispatch] = useAppContext();\r\n\r\n  const onChange = (event) => {\r\n    setFormState({ ...formState, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    let errors = {};\r\n    // handleValidation();\r\n    event.preventDefault();\r\n    const userData = {\r\n      email: formState.email,\r\n      password: formState.password,\r\n    };\r\n    if (formState.formIsValid) {\r\n      try {\r\n        const res = await loginUser(userData);\r\n        // console.log(res.data);\r\n        if (res.data === \"TRUE\") {\r\n          const response = await loginUser(userData);\r\n          // Set token to localStorage\r\n          const token = response.data;\r\n          // Set user to logged in\r\n          await setUserLoggedIn(token, appDispatch);\r\n          history.push(\"/\");\r\n        }\r\n\r\n        console.log(\"Form submitted\");\r\n      } catch (error) {\r\n        errors[\"email\"] = \"Email already exists\";\r\n        setFormState({ ...formState, errors });\r\n      }\r\n    } else {\r\n      console.log(\"Form has errors.\");\r\n    }\r\n  };\r\n\r\n  // Render Login form\r\n  return (\r\n    <div>\r\n      {/* EMAIL ADDRRESS */}\r\n      <form noValidate onSubmit={onSubmit}>\r\n        <div className=\"field\">\r\n          <div className=\"control has-icons-left\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email address\"\r\n              className=\"input\"\r\n              required\r\n              value={formState.email}\r\n              onChange={onChange}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"field\">\r\n          <div className=\"control has-icons-left\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"input\"\r\n              required\r\n              value={formState.password}\r\n              onChange={onChange}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Login\r\n        </button>\r\n      </form>\r\n\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\AddRecord\\AddRecord.js",["140"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction NewRecord(props) {\r\n  const { id } = useParams();\r\n  // console.log(\"propsID: \" + props.id);\r\n  const [cert_id, setCert_id] = useState([]);\r\n  const [expiry, setExpiry] = useState([]);\r\n  // console.log(cert_id, expiry);\r\n\r\n  // LOOK UP CERTS\r\n  const [certs, setCerts] = useState([]);\r\n  function fetchCerts() {\r\n    return axios.get(\"/api/certs\").then((response) => response.data);\r\n  }\r\n  useEffect(() => {\r\n    fetchCerts().then((certs) => setCerts(certs));\r\n  }, []);\r\n\r\n  const [members, setMembers] = useState([]);\r\n\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displayname/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n  // FUNCTION TO INVOKE API ROUTE AND PUT MYSQL\r\n  function submitHandler(e) {\r\n    // e.preventDefault();\r\n    // console.log([]);\r\n    axios\r\n      .post(\"/api/addrecord\", {\r\n        // member_id: member_id,\r\n        member_id: id,\r\n        cert_id: cert_id,\r\n        expiry: expiry,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render New record form\r\n  return (\r\n    <div className=\"new-member-form\">\r\n      <form className=\"gen-text\" onSubmit={submitHandler}>\r\n        <h4 className=\"title-text\">Add Certification to:</h4>\r\n        {members.map((member, i) => {\r\n          return (\r\n            //\r\n            <h4 key={member.id} className=\"title-text\">\r\n              {member.firstname} {member.lastname}\r\n            </h4>\r\n          );\r\n        })}\r\n\r\n        <div className=\"control\">\r\n          <div className=\"select\">\r\n            <select\r\n              className=\"input input-box gen-text\"\r\n              name=\"certname\"\r\n              value={cert_id}\r\n              onChange={(e) => setCert_id(e.target.value)}\r\n            >\r\n              <option value=\"\" selected disabled>\r\n                Select Certificate\r\n              </option>\r\n              {certs.map((cert) => {\r\n                return (\r\n                  <option key={cert.id} value={cert.id}>\r\n                    {\" \"}\r\n                    {cert.certname}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <p className=\"gen-text\">Select new expiry:</p>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input input-box gen-text\"\r\n              type=\"date\"\r\n              name=\"expiry\"\r\n              value={expiry}\r\n              onChange={(e) => setExpiry(e.target.value)}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control\">\r\n          <button type=\"submit\" className=\"button is-primary button-text\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewRecord;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Menu\\Menu.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummary.js",["141","142","143","144","145"],"import React, { useState, useEffect } from \"react\";\r\nimport MemberSummaryList from \"./MemberSummaryList/MemberSummaryList\";\r\nimport { BrowserRouter as Router, Switch, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction MemberSummary() {\r\n  const { id } = useParams();\r\n  console.log(\"number \" + id);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  // console.log(firstname, lastname);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displayname/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"title-text\">Member Profile:</h4>\r\n      {members.map((member, i) => {\r\n        console.log(member);\r\n        return (\r\n          //\r\n          <h4 key={member.id} className=\"title-text\">\r\n            {member.firstname} {member.lastname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n      <Router>\r\n        <Switch>\r\n          <MemberSummaryList id={id} />\r\n        </Switch>\r\n      </Router>\r\n      <p className=\"gen-text\">Member number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default MemberSummary;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummary.js",["146"],"import React, { useState, useEffect } from \"react\";\r\nimport CertSummaryList from \"./CertSummaryList/CertSummaryList\";\r\nimport { BrowserRouter as Router, Switch, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction CertSummary() {\r\n  const { id } = useParams();\r\n\r\n  const [certs, setMembers] = useState([]);\r\n\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displaycert/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"title-text\">Certification Check:</h4>\r\n      {certs.map((cert, i) => {\r\n        return (\r\n          //\r\n          <h4 key={cert.id} className=\"title-text\">\r\n            {cert.certname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n      <Router>\r\n        <Switch>\r\n          <CertSummaryList id={id} />\r\n        </Switch>\r\n      </Router>\r\n      <p className=\"gen-text\">Cert number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default CertSummary;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\NewMember.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\Confirmation\\Confirmation.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\UpdateRecord\\UpdateRecord.js",["147"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction UpdateRecord(props) {\r\n  const { id } = useParams();\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios\r\n      .get(\"/api/updaterecord/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((records) => setRecords(records));\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  const [expiry, setExpiry] = useState([]);\r\n \r\n  function submitHandler(e) {\r\n    // e.preventDefault();\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updaterecord/\" + id, {\r\n        expiry: expiry,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render record\r\n  console.log({ id });\r\n  return (\r\n    <div>\r\n      <h4 className=\"title-text\">Extend Certification:</h4>\r\n      {records.map((record, i) => {\r\n        return (\r\n          <p key={record.id}>\r\n            <h4 className=\"title-text\">\r\n              {record.firstname} {record.lastname}\r\n            </h4>\r\n            <h4 className=\"gen-text\"> {record.certname} </h4>\r\n            <h4 className=\"gen-text\">\r\n              {\" \"}\r\n              Current Expiry: {parseDate(record.expiry)}\r\n            </h4>\r\n          </p>\r\n        );\r\n      })}\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"field\">\r\n          <label className=\"label\">\r\n            <p className=\"gen-text\">\r\n              <strong>Select new expiry:</strong>\r\n            </p>\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input input-box gen-text\"\r\n              type=\"date\"\r\n              name=\"expiry\"\r\n              value={expiry}\r\n              onChange={(e) => setExpiry(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"control\">\r\n            <button type=\"submit\" className=\"button is-primary button-text\">\r\n              Extend\r\n            </button>\r\n            <p className=\"gen-text\">Record number #{id}</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {records.map((record, i) => {\r\n        return <Link to=\"/members/\">Back to Member Lookup</Link>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRecord;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberSelection.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\EditMember\\EditMember.js",["148","149","150","151","152"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction EditMember(props) {\r\n  const { id } = useParams();\r\n  console.log(id);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  const [email, setEmail] = useState([]);\r\n  const [dob, setDob] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [iscommittee, setIscommittee] = useState([]);\r\n  const [iscoach, setIscoach] = useState([]);\r\n  const [isactive, setIsactive] = useState([]);\r\n  // console.log(firstname, lastname, email, dob, gender, iscommittee, iscoach, isactive);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/updatemember/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n  function parseDate(dob) {\r\n    const date = new Date(dob);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  function toYesNo(iscommittee) {\r\n    if (iscommittee) {\r\n      return \"yes\";\r\n    } else {\r\n      return \"no\";\r\n    }\r\n  }\r\n\r\n  function toYesNo(iscoach) {\r\n    if (iscoach) {\r\n      return \"yes\";\r\n    } else {\r\n      return \"no\";\r\n    }\r\n  }\r\n\r\n  function toYesNo(isactive) {\r\n    if (isactive) {\r\n      return \"yes\";\r\n    } else {\r\n      return \"no\";\r\n    }\r\n  }\r\n\r\n  const [expiry, setExpiry] = useState([]);\r\n\r\n  function submitFirstnameHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/firstname/\" + id, {\r\n        firstname: firstname,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitLastnameHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/lastname/\" + id, {\r\n        lastname: lastname,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitEmailHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/email/\" + id, {\r\n        email: email,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitDobHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/dob/\" + id, {\r\n        dob: dob,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitGenderHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/gender/\" + id, {\r\n        gender: gender,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIscommitteeHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/iscommittee/\" + id, {\r\n        iscommittee: iscommittee,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIscoachHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/iscoach/\" + id, {\r\n        iscoach: iscoach,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIsactiveHandler(e) {\r\n    // console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/isactive/\" + id, {\r\n        isactive: isactive,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render member\r\n  // console.log({ id });\r\n  return (\r\n    <div>\r\n      <h4 className=\"title-text\">Update member details:</h4>\r\n      {members.map((member, i) => {\r\n        return (\r\n          <p key={member.id}>\r\n            <h4 className=\"title-text\">\r\n              {member.firstname} {member.lastname}\r\n            </h4>\r\n            <p className=\"gen-text\">{member.email} </p>\r\n            <p className=\"gen-text\">\r\n              {\" \"}\r\n              {parseDate(member.dob)} {member.gender}\r\n            </p>\r\n            <p className=\"gen-text\">\r\n              Committee member: {toYesNo(member.iscommittee)}{\" \"}\r\n            </p>\r\n            <p className=\"gen-text\">Coach: {toYesNo(member.iscoach)}</p>\r\n            <p className=\"gen-text\">\r\n              Member active: {toYesNo(member.isactive)}\r\n            </p>\r\n\r\n            <form onSubmit={submitFirstnameHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input input-box gen-text\"\r\n                  type=\"text\"\r\n                  name=\"firstname\"\r\n                  value={firstname}\r\n                  placeholder={member.firstname}\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={firstname.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitLastnameHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input input-box gen-text\"\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  value={lastname}\r\n                  placeholder={member.lastname}\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={lastname.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitEmailHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input input-box gen-text\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  placeholder={member.email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={email.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitDobHandler}>\r\n              <div className=\"field\">\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input input-box gen-text\"\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    value={dob}\r\n                    data-start-date={member.dob}\r\n                    onChange={(e) => setDob(e.target.value)}\r\n                  ></input>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"button is-primary button-text update-text\"\r\n                    disabled={dob.length < 1}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitGenderHandler}>\r\n              <div className=\"control\">\r\n                <div className=\"select\">\r\n                  <select\r\n                    className=\"input input-box gen-text\"\r\n                    name=\"gender\"\r\n                    value={gender}\r\n                    onChange={(e) => setGender(e.target.value)}\r\n                  >\r\n                    <option selected hidden>\r\n                      {member.gender}\r\n                    </option>\r\n                    <option value=\"\" selected disabled>\r\n                      {member.gender}\r\n                    </option>\r\n                    <option>Unknown</option>\r\n                    <option>Female</option>\r\n                    <option>Male</option>\r\n                    <option>Other</option>\r\n                  </select>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"button is-primary button-text update-text\"\r\n                    disabled={gender.length < 1}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitIscommitteeHandler}>\r\n              <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"iscommittee\"\r\n                  value={iscommittee}\r\n                  defaultChecked={member.iscommittee}\r\n                  onChange={(e) => setIscommittee(e.target.checked)}\r\n                ></input>\r\n                Committee\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={iscommittee.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n\r\n            <form onSubmit={submitIscoachHandler}>\r\n              <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"iscoach\"\r\n                  value={iscoach}\r\n                  defaultChecked={member.iscoach}\r\n                  onChange={(e) => setIscoach(e.target.checked)}\r\n                ></input>\r\n                Coach\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={iscoach.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n\r\n            <form onSubmit={submitIsactiveHandler}>\r\n              <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"isactive\"\r\n                  value={isactive}\r\n                  defaultChecked={member.isactive}\r\n                  onChange={(e) => setIsactive(e.target.checked)}\r\n                ></input>\r\n                Active\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={isactive.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n            <Link to=\"/members/\">Back to Member Lookup</Link>\r\n          </p>\r\n        );\r\n      })}\r\n      <p className=\"gen-text\">Member number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditMember;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertSelection.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummaryList\\MemberSummaryList.js",["153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction MemberSummaryList(props) {\r\n  console.log(props.id);\r\n\r\n  const [profiles, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios\r\n      .get(\"/api/members/\" + props.id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((profiles) => setRecords(profiles));\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  function addrecordHandler() {\r\n    var link = `/#/addrecord/${props.id}`;\r\n    window.location.href = link;\r\n  }\r\n\r\n  function editmemberHandler() {\r\n    var link = `/#/editmember/${props.id}`;\r\n    window.location.href = link;\r\n  }\r\n\r\n  function updaterecordHandler() {\r\n    var link = `/#/updaterecord/${props.id}`;\r\n    window.location.href = link;\r\n  }\r\n\r\n  // Render member profile list\r\n  return (\r\n    <div className=\"menu-list\">\r\n      {profiles.map((record, i) => {\r\n        console.log(record);\r\n        return (\r\n          <p key={record.id}>\r\n            <Router>\r\n              <Link\r\n                to={\"/#/updaterecord/\" + record.id}\r\n                onClick={updaterecordHandler}\r\n              >\r\n                <span className=\"menu-text\">\r\n                  {record.certname} {record.member_id}\r\n                </span>\r\n                <br></br>\r\n                <span className=\"gen-text\">\r\n                  Expiry:{parseDate(record.expiry)}\r\n                </span>\r\n              </Link>\r\n            </Router>\r\n          </p>\r\n        );\r\n      })}\r\n\r\n      <div className=\"control button-div\">\r\n        <Link\r\n          className=\"button-text\"\r\n          to={`/#/addrecord/${props.id}`}\r\n          onClick={addrecordHandler}\r\n        >\r\n          Add Record\r\n        </Link>\r\n      </div>\r\n      <div className=\"control button-div\">\r\n        <Link\r\n          className=\"button-text\"\r\n          to={`/#/editmember/${props.id}`}\r\n          onClick={editmemberHandler}\r\n        >\r\n          Edit Member\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberSummaryList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertList\\CertList.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberList\\MemberList.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummaryList\\CertSummaryList.js",["155"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CertSummaryList(props) {\r\n  // console.log(props.id);\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios\r\n      .get(\"/api/certs/\" + props.id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((response) => setRecords(response));\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  function updaterecordHandler() {\r\n    var link = `/#/updaterecord/${props.id}`;\r\n    window.location.href = link;\r\n  }\r\n\r\n  // Render cert summary list\r\n  return (\r\n    <div className=\"menu-list\">\r\n      {records.map((record, i) => {\r\n        // console.log(record);\r\n        return (\r\n          <p key={record.id}>\r\n            <Link\r\n              to={`/#/updaterecord/${record.id}`}\r\n              onClick={updaterecordHandler}\r\n            >\r\n              <span className=\"menu-text\">\r\n                {record.firstname} {record.lastname}{\" \"}\r\n              </span>\r\n              <br></br>\r\n              {/* <span className=\"gen-text\">{record.certname}</span> <br></br>  */}\r\n              <span className=\"gen-text\">\r\n                Expiry: {parseDate(record.expiry)}\r\n              </span>\r\n            </Link>\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CertSummaryList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\FullTable\\FullTable.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\Register.js",["156"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { registerUser } from \"../../utils/userApis\";\r\nimport { checkFormFields } from \"./checkFormFields\";\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n\r\n  const [registerState, setRegisterState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {},\r\n    formIsValid: true,\r\n  });\r\n\r\n  const handleValidation = () => {\r\n    const [errors, formIsValid] = checkFormFields(registerState);\r\n    setRegisterState({ ...registerState, errors, formIsValid });\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setRegisterState({\r\n      ...registerState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    let errors = {};\r\n    handleValidation();\r\n    event.preventDefault();\r\n    const userData = {\r\n      email: registerState.email,\r\n      password: registerState.password,\r\n    };\r\n    if (registerState.formIsValid) {\r\n      try {\r\n        const res = await registerUser(userData);\r\n        history.push(\"/login\");\r\n        console.log(\"Form submitted\");\r\n      } catch (error) {\r\n        errors[\"email\"] = \"Email already exists\";\r\n        setRegisterState({ ...registerState, errors });\r\n      }\r\n    } else {\r\n      console.log(\"Form has errors.\");\r\n    }\r\n  };\r\n\r\n  // Render Signup form\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"mx-auto mt-5 col-md-6\">\r\n          <form noValidate onSubmit={onSubmit}>\r\n            <h1 className=\"mb-3 h3 title-text font-weight normal\">\r\n              Sign up to use this app\r\n            </h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email Address</label>\r\n              <input\r\n                type=\"email\"\r\n                refs=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={registerState.email}\r\n                onChange={onChange}\r\n              />\r\n              <span style={{ color: \"red\" }}>\r\n                {registerState.errors[\"email\"]}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                refs=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={registerState.password}\r\n                onChange={onChange}\r\n              />\r\n              <span style={{ color: \"red\" }}>\r\n                {registerState.errors[\"password\"]}\r\n              </span>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\r\n              Register\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Register;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Landing\\Landing.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Register\\checkFormFields.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\userApis.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\index.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\index.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\store\\appStore.js",[],["157","158"],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\actions\\types.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\utils\\setAuthToken.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":21,"nodeType":"165","messageId":"166","endLine":3,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":32,"column":6,"nodeType":"169","endLine":32,"endColumn":8,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"171","line":11,"column":10,"nodeType":"165","messageId":"166","endLine":11,"endColumn":19},{"ruleId":"163","severity":1,"message":"172","line":11,"column":21,"nodeType":"165","messageId":"166","endLine":11,"endColumn":33},{"ruleId":"163","severity":1,"message":"173","line":12,"column":10,"nodeType":"165","messageId":"166","endLine":12,"endColumn":18},{"ruleId":"163","severity":1,"message":"174","line":12,"column":20,"nodeType":"165","messageId":"166","endLine":12,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":23,"column":6,"nodeType":"169","endLine":23,"endColumn":8,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"168","line":20,"column":6,"nodeType":"169","endLine":20,"endColumn":8,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"177","line":18,"column":6,"nodeType":"169","endLine":18,"endColumn":8,"suggestions":"178"},{"ruleId":"167","severity":1,"message":"168","line":28,"column":6,"nodeType":"169","endLine":28,"endColumn":8,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":45,"column":12,"nodeType":"165","messageId":"182","endLine":45,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":53,"column":12,"nodeType":"165","messageId":"182","endLine":53,"endColumn":19},{"ruleId":"163","severity":1,"message":"183","line":61,"column":10,"nodeType":"165","messageId":"166","endLine":61,"endColumn":16},{"ruleId":"163","severity":1,"message":"184","line":61,"column":18,"nodeType":"165","messageId":"166","endLine":61,"endColumn":27},{"ruleId":"163","severity":1,"message":"185","line":3,"column":41,"nodeType":"165","messageId":"166","endLine":3,"endColumn":51},{"ruleId":"167","severity":1,"message":"177","line":18,"column":6,"nodeType":"169","endLine":18,"endColumn":8,"suggestions":"186"},{"ruleId":"167","severity":1,"message":"177","line":18,"column":6,"nodeType":"169","endLine":18,"endColumn":8,"suggestions":"187"},{"ruleId":"163","severity":1,"message":"188","line":38,"column":15,"nodeType":"165","messageId":"166","endLine":38,"endColumn":18},{"ruleId":"159","replacedBy":"189"},{"ruleId":"161","replacedBy":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'getUsers' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMembers'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'firstname' is assigned a value but never used.","'setFirstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","'setLastname' is assigned a value but never used.",["194"],["195"],"React Hook useEffect has a missing dependency: 'fetchRecords'. Either include it or remove the dependency array.",["196"],["197"],"no-redeclare","'toYesNo' is already defined.","redeclared","'expiry' is assigned a value but never used.","'setExpiry' is assigned a value but never used.","'useHistory' is defined but never used.",["198"],["199"],"'res' is assigned a value but never used.",["191"],["192"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},{"desc":"200","fix":"203"},{"desc":"204","fix":"205"},{"desc":"200","fix":"206"},{"desc":"204","fix":"207"},{"desc":"204","fix":"208"},"Update the dependencies array to be: [fetchMembers]",{"range":"209","text":"210"},{"range":"211","text":"210"},{"range":"212","text":"210"},"Update the dependencies array to be: [fetchRecords]",{"range":"213","text":"214"},{"range":"215","text":"210"},{"range":"216","text":"214"},{"range":"217","text":"214"},[887,889],"[fetchMembers]",[738,740],[558,560],[472,474],"[fetchRecords]",[960,962],[502,504],[463,465]]