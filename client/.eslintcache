[{"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\index.js":"1","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\reportWebVitals.js":"2","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\App.js":"3","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Login\\Login.js":"4","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\AddRecord\\AddRecord.js":"5","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Menu\\Menu.js":"6","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummary.js":"7","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummary.js":"8","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\NewMember.js":"9","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\Confirmation\\Confirmation.js":"10","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\UpdateRecord\\UpdateRecord.js":"11","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberSelection.js":"12","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\EditMember\\EditMember.js":"13","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertSelection.js":"14","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Footer\\Footer.js":"15","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Header\\Header.js":"16","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummaryList\\MemberSummaryList.js":"17","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertList\\CertList.js":"18","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberList\\MemberList.js":"19","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummaryList\\CertSummaryList.js":"20","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\FullTable\\FullTable.js":"21"},{"size":503,"mtime":1612254699410,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2709,"mtime":1612958142583,"results":"25","hashOfConfig":"23"},{"size":2204,"mtime":1612864279985,"results":"26","hashOfConfig":"23"},{"size":3241,"mtime":1612953048252,"results":"27","hashOfConfig":"23"},{"size":473,"mtime":1612955998209,"results":"28","hashOfConfig":"23"},{"size":1370,"mtime":1612951640558,"results":"29","hashOfConfig":"23"},{"size":1155,"mtime":1612953661301,"results":"30","hashOfConfig":"23"},{"size":4458,"mtime":1612875309577,"results":"31","hashOfConfig":"23"},{"size":382,"mtime":1612863140118,"results":"32","hashOfConfig":"23"},{"size":2601,"mtime":1612953026038,"results":"33","hashOfConfig":"23"},{"size":310,"mtime":1612952322298,"results":"34","hashOfConfig":"23"},{"size":11550,"mtime":1612954766502,"results":"35","hashOfConfig":"23"},{"size":274,"mtime":1612953298646,"results":"36","hashOfConfig":"23"},{"size":382,"mtime":1611466806904,"results":"37","hashOfConfig":"23"},{"size":441,"mtime":1612958237241,"results":"38","hashOfConfig":"23"},{"size":1544,"mtime":1612951183062,"results":"39","hashOfConfig":"23"},{"size":758,"mtime":1612873943921,"results":"40","hashOfConfig":"23"},{"size":817,"mtime":1612873523497,"results":"41","hashOfConfig":"23"},{"size":1309,"mtime":1612953640528,"results":"42","hashOfConfig":"23"},{"size":1455,"mtime":1612957276027,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"jvy9vk",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\index.js",[],["96","97"],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\App.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Login\\Login.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\AddRecord\\AddRecord.js",["98","99","100"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams} from \"react-router-dom\";\r\n\r\nfunction NewRecord(props) {\r\n  const { id } = useParams();\r\n  // console.log(\"propsID: \" + props.id);\r\n  console.log(\"{ ID }: \" + id);\r\n  const [cert_id, setCert_id] = useState([]);\r\n  const [expiry, setExpiry] = useState([]);\r\n  console.log(cert_id)\r\n  console.log(expiry);\r\n\r\n  // LOOK UP CERTS\r\n  const [certs, setCerts] = useState([]);\r\n  function fetchCerts() {\r\n    return axios.get(\"/api/certs\").then((response) => response.data);\r\n  }\r\n  useEffect(() => {\r\n    fetchCerts().then((certs) => setCerts(certs));\r\n  }, []);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  console.log(firstname);\r\n  console.log(lastname);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displayname/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n  // FUNCTION TO INVOKE API ROUTE AND PUT MYSQL\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    console.log([]);\r\n    axios\r\n      .post(\"/api/addrecord\", {\r\n        // member_id: member_id,\r\n        member_id: id,\r\n        cert_id: cert_id,\r\n        expiry: expiry,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render New record form\r\n  return (\r\n    <div className=\"new-member-form\">\r\n\r\n      <form className=\"gen-text\" onSubmit={submitHandler}>\r\n\r\n      <h4 className=\"title-text\">Add Certification to:</h4>\r\n        {members.map((member, i) => {\r\n        console.log(member);\r\n        return (\r\n          //\r\n          <h4 key={member.id} className=\"title-text\">\r\n            {member.firstname} {member.lastname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n        {/* <label className=\"label\">Certificate</label> */}\r\n        <div className=\"control\">\r\n          <div className=\"select\">\r\n            <select\r\n              className=\"input input-box gen-text\"\r\n              name=\"certname\"\r\n              value={cert_id}\r\n              onChange={(e) => setCert_id(e.target.value)}\r\n            >\r\n              <option value=\"\" selected disabled>Select Certificate</option>\r\n              {certs.map((cert) => {\r\n                return <option key={cert.id} value={cert.id}> {cert.certname} </option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <p className=\"gen-text\">Select new expiry:</p>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input input-box gen-text\"\r\n              type=\"date\"\r\n              name=\"expiry\"\r\n              value={expiry}\r\n              onChange={(e) => setExpiry(e.target.value)}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control\">\r\n          <button type=\"submit\" className=\"button is-primary button-text\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewRecord;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\Menu\\Menu.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummary.js",["101","102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport MemberSummaryList from \"./MemberSummaryList/MemberSummaryList\";\r\n// import AddRecord from \"./MemberSummaryList/AddRecord/AddRecord\";\r\nimport { BrowserRouter as Router, Switch, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction MemberSummary() {\r\n  const { id } = useParams();\r\n  console.log(\"number \" + id);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  console.log(firstname);\r\n  console.log(lastname);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displayname/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"title-text\">Member Profile:</h4>\r\n      {members.map((member, i) => {\r\n        console.log(member);\r\n        return (\r\n          //\r\n          <h4 key={member.id} className=\"title-text\">\r\n            {member.firstname} {member.lastname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n      <Router>\r\n        <Switch>\r\n          <MemberSummaryList id={id} />\r\n        </Switch>\r\n      </Router>\r\n      <p className=\"gen-text\">Member number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default MemberSummary;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummary.js",["104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport CertSummaryList from \"./CertSummaryList/CertSummaryList\";\r\nimport { BrowserRouter as Router, Switch, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction CertSummary() {\r\n  const { id } = useParams();\r\n\r\n  const [certs, setMembers] = useState([]);\r\n  const [certname, setCertname] = useState([]);\r\n  console.log(certname);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/displaycert/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n            <h4 className=\"title-text\">Certification Check:</h4>\r\n      {certs.map((cert, i) => {\r\n        console.log(cert);\r\n        return (\r\n          //\r\n          <h4 key={cert.id} className=\"title-text\">\r\n            {cert.certname}\r\n          </h4>\r\n        );\r\n      })}\r\n\r\n      <Router>\r\n        <Switch>\r\n      <CertSummaryList id={id} />\r\n      </Switch>\r\n      </Router>\r\n      <p className=\"gen-text\">Cert number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default CertSummary;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\NewMember.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\NewMember\\Confirmation\\Confirmation.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\UpdateRecord\\UpdateRecord.js",["106"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction UpdateRecord(props) {\r\n  const { id } = useParams();\r\n  console.log(id);\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios\r\n      .get(\"/api/updaterecord/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((records) => setRecords(records));\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  const [expiry, setExpiry] = useState([]);\r\n  console.log(expiry);\r\n\r\n  function submitHandler(e) {\r\n    // e.preventDefault();\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updaterecord/\" + id, {\r\n        expiry: expiry,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render record\r\n  console.log({ id });\r\n  return (\r\n    <div>\r\n            <h4 className=\"title-text\">Extend Certification:</h4>\r\n      {records.map((record, i) => {\r\n        console.log(record);\r\n        return (\r\n          <p key={record.id}>\r\n            <h4 className=\"title-text\">\r\n              {record.firstname} {record.lastname}\r\n            </h4>\r\n            <h4 className=\"gen-text\"> {record.certname} </h4>\r\n            <h4 className=\"gen-text\"> Current Expiry: {parseDate(record.expiry)}</h4>\r\n          </p>\r\n        );\r\n      })}\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"field\">\r\n          <label className=\"label\">\r\n            <p className=\"gen-text\"><strong>Select new expiry:</strong></p>\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input input-box gen-text\"\r\n              type=\"date\"\r\n              name=\"expiry\"\r\n              value={expiry}\r\n              onChange={(e) => setExpiry(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"control\">\r\n            <button type=\"submit\" className=\"button is-primary button-text\">\r\n              Extend\r\n            </button>\r\n            <p className=\"gen-text\">Record number #{id}</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {records.map((record, i) => {\r\n        console.log(record);\r\n        return <Link to=\"/members/\">Back to Member Lookup</Link>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRecord;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberSelection.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\EditMember\\EditMember.js",["107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction EditMember(props) {\r\n  const { id } = useParams();\r\n  console.log(id);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [firstname, setFirstname] = useState([]);\r\n  const [lastname, setLastname] = useState([]);\r\n  const [email, setEmail] = useState([]);\r\n  const [dob, setDob] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [iscommittee, setIscommittee] = useState([]);\r\n  const [iscoach, setIscoach] = useState([]);\r\n  const [isactive, setIsactive] = useState([]);\r\n  console.log(firstname);\r\n  console.log(lastname);\r\n  console.log(email);\r\n  console.log(dob);\r\n  console.log(gender);\r\n  console.log(iscommittee);\r\n  console.log(iscoach);\r\n  console.log(isactive);\r\n\r\n  function fetchMembers() {\r\n    return axios\r\n      .get(\"/api/updatemember/\" + id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMembers().then((members) => setMembers(members));\r\n  }, []);\r\n\r\n  function parseDate(dob) {\r\n    const date = new Date(dob);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  // function parseBoolean(props) {\r\n  //   const isactive = new active(props);\r\n  //   return (\r\n  //     \"Yes\"\r\n  //   );\r\n  // }\r\n\r\n  const [expiry, setExpiry] = useState([]);\r\n  console.log(expiry);\r\n\r\n  function submitFirstnameHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/firstname/\" + id, {\r\n        firstname: firstname,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitLastnameHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/lastname/\" + id, {\r\n        lastname: lastname,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitEmailHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/email/\" + id, {\r\n        email: email,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitDobHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/dob/\" + id, {\r\n        dob: dob,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitGenderHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/gender/\" + id, {\r\n        gender: gender,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIscommitteeHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/iscommittee/\" + id, {\r\n        iscommittee: iscommittee,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIscoachHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/iscoach/\" + id, {\r\n        iscoach: iscoach,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function submitIsactiveHandler(e) {\r\n    console.log([]);\r\n    axios\r\n      .patch(\"/api/updatemember/isactive/\" + id, {\r\n        isactive: isactive,\r\n        id: id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Render member\r\n  console.log({ id });\r\n  return (\r\n    <div>\r\n            <h4 className=\"title-text\">Update member details:</h4>\r\n      {members.map((member, i) => {\r\n        console.log(member);\r\n        return (\r\n          <p key={member.id}>\r\n            <h4 className=\"title-text\">\r\n              {member.firstname} {member.lastname}\r\n            </h4>\r\n            <p className=\"gen-text\">\r\n            {member.email} </p>\r\n            <p className=\"gen-text\"> {parseDate(member.dob)} {member.gender} \r\n            </p>\r\n            <p className=\"gen-text\">\r\n              Committee member: {member.iscommittee} </p>\r\n            <p className=\"gen-text\">Coach: {member.iscoach}\r\n            </p>\r\n            <p className=\"gen-text\">Member active: {member.isactive}</p>\r\n\r\n            <form onSubmit={submitFirstnameHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n              className=\"input input-box gen-text\"\r\n                  type=\"text\"\r\n                  name=\"firstname\"\r\n                  value={firstname}\r\n                  placeholder={member.firstname}\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={firstname.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitLastnameHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n              className=\"input input-box gen-text\"\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  value={lastname}\r\n                  placeholder={member.lastname}\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={lastname.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitEmailHandler}>\r\n              <div className=\"control\">\r\n                <input\r\n              className=\"input input-box gen-text\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  placeholder={member.email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></input>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button is-primary button-text update-text\"\r\n                  disabled={email.length < 1}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitDobHandler}>\r\n              <div className=\"field\">\r\n                {/* <label className=\"label\">Current DOB: {member.dob}</label> */}\r\n                <div className=\"control\">\r\n                  <input\r\n              className=\"input input-box gen-text\"\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    value={dob}\r\n                    data-start-date={member.dob}\r\n                    onChange={(e) => setDob(e.target.value)}\r\n                  ></input>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"button is-primary button-text update-text\"\r\n                    disabled={dob.length < 1}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  {console.log(dob)}\r\n                  {console.log(member.dob)}\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitGenderHandler}>\r\n              <div className=\"control\">\r\n                <div className=\"select\">\r\n                  <select\r\n              className=\"input input-box gen-text\"\r\n                    // type=\"date\"\r\n                    name=\"gender\"\r\n                    value={gender}\r\n                    // selection={member.gender}\r\n                    onChange={(e) => setGender(e.target.value)}\r\n                  >\r\n                    <option selected hidden>\r\n                      {member.gender}\r\n                    </option>\r\n                    <option value=\"\" selected disabled>{member.gender}</option>\r\n                    <option>Unknown</option>\r\n                    <option>Female</option>\r\n                    <option>Male</option>\r\n                    <option>Other</option>\r\n                  </select>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"button is-primary button-text update-text\"\r\n                    disabled={gender.length < 1}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={submitIscommitteeHandler}>\r\n            <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"iscommittee\"\r\n                  value={iscommittee}\r\n                  defaultChecked={member.iscommittee}\r\n                  onChange={(e) => setIscommittee(e.target.checked)}\r\n                ></input>\r\n                Committee\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={iscommittee.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n            {/* <br></br> */}\r\n            <form onSubmit={submitIscoachHandler}>\r\n            <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"iscoach\"\r\n                  value={iscoach}\r\n                  defaultChecked={member.iscoach}\r\n                  onChange={(e) => setIscoach(e.target.checked)}\r\n                ></input>\r\n                Coach\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={iscoach.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n            {/* <br></br> */}\r\n            <form onSubmit={submitIsactiveHandler}>\r\n              <label className=\"checkbox menu-text\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"checkbox\"\r\n                  name=\"isactive\"\r\n                  value={isactive}\r\n                  defaultChecked={member.isactive}\r\n                  onChange={(e) => setIsactive(e.target.checked)}\r\n                ></input>\r\n                Active\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-primary button-text update-text\"\r\n                disabled={isactive.length < 1}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n            <Link to=\"/members/\">Back to Member Lookup</Link>\r\n           </p>\r\n        );\r\n        \r\n      })}\r\n            <p className=\"gen-text\">Member number #{id}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditMember;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertSelection.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSummary\\MemberSummaryList\\MemberSummaryList.js",["109"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MemberSummaryList.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction MemberSummaryList(props) {\r\n  console.log(props.id);\r\n\r\n  const [profiles, setRecords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios\r\n      .get(\"/api/members/\" + props.id)\r\n      .then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((profiles) => setRecords(profiles));\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  // Render member profile list\r\n  return (\r\n    <div className=\"menu-list\">\r\n      {profiles.map((record, i) => {\r\n        console.log(record);\r\n        return (\r\n          <p key={record.id}>\r\n            <Link to={\"/#/updaterecord/\" + record.id}>\r\n              <span className=\"menu-text\">{record.certname} {record.member_id}</span>\r\n              <br></br>\r\n              <span className=\"gen-text\">Expiry:{parseDate(record.expiry)}</span>\r\n            </Link>\r\n          </p>\r\n        );\r\n      })}\r\n      \r\n      <div className=\"control button-div\">\r\n        <Link className=\"button-text\" to={`/#/addrecord/${props.id}`}>Add Record</Link>\r\n      </div>\r\n      <div className=\"control button-div\">\r\n      <Link className=\"button-text\" to={`/#/editmember/${props.id}`}>Edit Member</Link>\r\n    </div></div>\r\n  );\r\n}\r\n\r\nexport default MemberSummaryList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSelection\\CertList\\CertList.js",[],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\MemberSelection\\MemberList\\MemberList.js",[],["110","111"],"C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\CertSummary\\CertSummaryList\\CertSummaryList.js",["112"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./CertSummaryList.css\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction CertSummaryList(props) {\r\n\r\n  console.log(props.id);\r\n\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function fetchRecords(){\r\n    return axios.get('/api/certs/' + props.id )\r\n      .then((response) => response.data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords()\r\n      .then((response) => setRecords(response) );\r\n  }, []);\r\n\r\n  function parseDate(expiry) {\r\n    const date = new Date(expiry)\r\n    return (date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear())\r\n  };\r\n\r\n  // Render cert summary list\r\n  return (\r\n    <div className=\"menu-list\">\r\n      {records.map((record, i) => {\r\n        console.log(record);\r\n        return (\r\n          <p key={record.id} >\r\n            <Link to={`/#/updaterecord/${record.id}`}> \r\n            <span className=\"menu-text\">{record.firstname} {record.lastname} </span><br></br> \r\n            {/* <span className=\"gen-text\">{record.certname}</span> <br></br>  */}\r\n            <span className=\"gen-text\">Expiry: {parseDate(record.expiry)}</span></Link>\r\n                      </p>\r\n          \r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default CertSummaryList;\r\n","C:\\Users\\lukew\\repos\\project3\\teamassist\\client\\src\\containers\\FullTable\\FullTable.js",["113"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RecordList() {\r\n  const [records, setMeRords] = useState([]);\r\n\r\n  function fetchRecords() {\r\n    return axios.get(\"/api/fulltable\").then((response) => response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecords().then((records) => setMeRords(records));\r\n  }, []);\r\n\r\n  // Render record list\r\n  return (\r\n    <div>\r\n        <h4>For best results, view table on a desktop or tablet</h4>\r\n    <table className=\"menu-list center\">\r\n            <tr className=\"menu-text\" >\r\n              <th>Firstname</th>\r\n              <th>Lastname</th>\r\n              <th>Gender</th>\r\n              <th>Date of Birth</th>\r\n              <th>Email Address</th>\r\n              <th>Certificate</th>\r\n              <th>Expiry</th>\r\n              <th>Is Active?</th> \r\n              </tr>\r\n      {records.map((record) => {\r\n        return (\r\n          <tr className=\"menu-text\" key={record.id}>\r\n              <td>{record.firstname} </td>\r\n              <td>{record.lastname}</td>\r\n              <td>{record.gender} </td>\r\n              <td>{record.dob} </td>\r\n              <td>{record.email} </td>\r\n              <td>{record.certname} </td>\r\n              <td>{record.expiry} </td>\r\n              <td>{record.isactive} </td> \r\n          </tr>\r\n        );\r\n      })}\r\n        </table>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default RecordList;\r\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":24,"column":21,"nodeType":"120","messageId":"121","endLine":24,"endColumn":33},{"ruleId":"118","severity":1,"message":"122","line":25,"column":20,"nodeType":"120","messageId":"121","endLine":25,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":37,"column":6,"nodeType":"125","endLine":37,"endColumn":8,"suggestions":"126"},{"ruleId":"118","severity":1,"message":"119","line":12,"column":21,"nodeType":"120","messageId":"121","endLine":12,"endColumn":33},{"ruleId":"118","severity":1,"message":"122","line":13,"column":20,"nodeType":"120","messageId":"121","endLine":13,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":25,"column":6,"nodeType":"125","endLine":25,"endColumn":8,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":11,"column":20,"nodeType":"120","messageId":"121","endLine":11,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":22,"column":6,"nodeType":"125","endLine":22,"endColumn":8,"suggestions":"129"},{"ruleId":"123","severity":1,"message":"130","line":19,"column":6,"nodeType":"125","endLine":19,"endColumn":8,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"124","line":35,"column":6,"nodeType":"125","endLine":35,"endColumn":8,"suggestions":"132"},{"ruleId":"118","severity":1,"message":"133","line":51,"column":18,"nodeType":"120","messageId":"121","endLine":51,"endColumn":27},{"ruleId":"123","severity":1,"message":"130","line":20,"column":6,"nodeType":"125","endLine":20,"endColumn":8,"suggestions":"134"},{"ruleId":"114","replacedBy":"135"},{"ruleId":"116","replacedBy":"136"},{"ruleId":"123","severity":1,"message":"130","line":22,"column":6,"nodeType":"125","endLine":22,"endColumn":8,"suggestions":"137"},{"ruleId":"118","severity":1,"message":"138","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'setFirstname' is assigned a value but never used.","Identifier","unusedVar","'setLastname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMembers'. Either include it or remove the dependency array.","ArrayExpression",["141"],["142"],"'setCertname' is assigned a value but never used.",["143"],"React Hook useEffect has a missing dependency: 'fetchRecords'. Either include it or remove the dependency array.",["144"],["145"],"'setExpiry' is assigned a value but never used.",["146"],["139"],["140"],["147"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},{"desc":"148","fix":"151"},{"desc":"152","fix":"153"},{"desc":"148","fix":"154"},{"desc":"152","fix":"155"},{"desc":"152","fix":"156"},"Update the dependencies array to be: [fetchMembers]",{"range":"157","text":"158"},{"range":"159","text":"158"},{"range":"160","text":"158"},"Update the dependencies array to be: [fetchRecords]",{"range":"161","text":"162"},{"range":"163","text":"158"},{"range":"164","text":"162"},{"range":"165","text":"162"},[1082,1084],"[fetchMembers]",[820,822],[633,635],[492,494],"[fetchRecords]",[1069,1071],[502,504],[499,501]]